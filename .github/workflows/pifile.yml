name: Pifile

on:
#  push:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
jobs:
  version:
    outputs:
      version: ${{ steps.get_version.outputs.version }}
      buildname: ${{ steps.get_version.outputs.buildname }}
    runs-on: "ubuntu-20.04"
    steps:
      - 
        name: Checkout repository
        uses: actions/checkout@v4
      - 
        name: Get the version
        id: get_version
        run: |
          if [ -z "$version" ]
          then
                version=$(date '+%Y%m%d')
                echo "version=${version}" >> $GITHUB_OUTPUT
          else
                echo "version=${version}" >> $GITHUB_OUTPUT
          fi
          builddate=$(date '+%Y-%m-%d')
          buildbranch='crankshaft-ng'
          buildhash=$(git rev-parse --short "$GITHUB_SHA")
          buildname="${builddate}-${buildbranch}-${buildhash}"
          echo "version=${version}" >> $GITHUB_OUTPUT
          echo "buildhash=${buildhash}" >> $GITHUB_OUTPUT
          echo "buildbranch=${buildbranch}" >> $GITHUB_OUTPUT
          echo "builddate=${builddate}" >> $GITHUB_OUTPUT
          echo "buildname=${buildname}" >> $GITHUB_OUTPUT
        env:
          version: ${{ github.event.inputs.version }}
  build:
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    runs-on: ${{ matrix.host }}
    needs: [ version ]
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        host: [
          "ubuntu-latest",
          #"macos-10.15",
        ]
        config:
          - {
              name: "Debian Buster armhf",
              basefile: "updater/base_buster_armhf",
              arch: "armhf",
              osname: "buster",
              ostype: "Debian"
            }
          - {
              name: "Debian Buster arm7",
              basefile: "updater/base_buster_arm7",
              arch: "arm7",
              osname: "buster",
              ostype: "Debian"
            }
    name: 'Build:  ${{ matrix.config.name }}'
    steps:
      - 
        name: Checkout repository
        uses: actions/checkout@v4
      - 
        name: Get the version
        id: get_version
        run: |
          if [ -n "$ostype" ]
          then 
                osname=${ostype}_${osname}
          fi
          echo "version=${version}-${osname}-${arch}" >> $GITHUB_OUTPUT
        env:
          version: ${{needs.version.outputs.version }}
          arch: ${{ matrix.config.arch }}
          ostype: ${{ matrix.config.ostype }}
          osname: ${{ matrix.config.osname }}
      - 
        name: Create Base Image
        uses: Nature40/pimod@v0.6.1 #v0.5.0
        with:
          pifile: ${{ matrix.config.basefile }}.Pifile
      - 
        name: Rename Image
        run: mv ${{ matrix.config.basefile }}.img ${{steps.get_version.outputs.version}}.img
      - 
        name: Package zip
        id: packagezip
        run: |
          IMG_FILENAME="${{steps.get_version.outputs.version}}.img"
          ZIP_FILENAME="${{steps.get_version.outputs.version}}.zip"
          MD5HASH="${IMG_FILENAME}.md5"
          SHA1HASH="${IMG_FILENAME}.sha1"
          SHA256HASH="${IMG_FILENAME}.sha256"
          md5sum "${IMG_FILENAME}" > "${MD5HASH}"
          sha1sum "${IMG_FILENAME}" > "${SHA1HASH}"
          sha256sum "${IMG_FILENAME}" > "${SHA256HASH}"
          zip "${ZIP_FILENAME}" "${IMG_FILENAME}" "${MD5HASH}" "${SHA1HASH}" "${SHA256HASH}"
          echo "ZIP_FILENAME=${ZIP_FILENAME}" >> $GITHUB_OUTPUT
          echo "MD5HASH=${MD5HASH}" >> $GITHUB_OUTPUT
          echo "SHA1HASH=${SHA1HASH}" >> $GITHUB_OUTPUT
          echo "SHA256HASH=${SHA256HASH}" >> $GITHUB_OUTPUT
      - 
        name: Upload build artifacts 
        id: upload_deploy
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.get_version.outputs.version }}
          path: |
            ${{ steps.packagezip.outputs.ZIP_FILENAME }}
            ${{ steps.packagezip.outputs.MD5HASH }}
            ${{ steps.packagezip.outputs.SHA1HASH }}
            ${{ steps.packagezip.outputs.SHA256HASH }}
      - 
        name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v5.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ steps.packagezip.outputs.ZIP_FILENAME }}
          asset_name: ${{ steps.packagezip.outputs.ZIP_FILENAME }}
          tag: ${{needs.version.outputs.version }}
          latest: false
          prerelease: true
          #draft: true
          #body: ${{steps.github_release.outputs.changelog}}
# Create Release
#  release:
#    runs-on: ubuntu-latest
#    needs: [ version, build ]
#    name: 'Create release'
#    outputs:
#      release_upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
#    steps:
#      - 
#        name: Build Changelog
#        id: github_release
#        uses: mikepenz/release-changelog-builder-action@v5.0.0
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      - 
#        name: Create GitHub release
#        id: create_release
#        uses: actions/create-release@v1.0.0
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{needs.version.outputs.version }}
#          release_name: ${{needs.version.outputs.buildname }}
#          #body: ${{steps.github_release.outputs.changelog}}
#          draft: true
#          prerelease: true
# Upload release artifacts
#  upload:
#    needs: [ version, build, release ]
#    runs-on: ${{ matrix.host }}
#    strategy:
#      fail-fast: false
#      max-parallel: 3
#      matrix:
#        host: [
#          "ubuntu-latest",
#          #"macos-10.15",
#        ]
#        config:
#          - {
#              name: "Debian Buster armhf",
#              basefile: "updater/base_buster_armhf",
#              arch: "armhf",
#              osname: "buster",
#              ostype: "Debian"
#            }
#          - {
#              name: "Debian Buster arm7",
#              basefile: "updater/base_buster_arm7",
#              arch: "arm7",
#              osname: "buster",
#              ostype: "Debian"
#            }
#    steps:
#    - 
#        name: Get the version
#        id: get_version
#        run: |
#          if [ -n "$ostype" ]
#          then 
#                osname=${ostype}_${osname}
#          fi
#          echo "version=${version}-${osname}-${arch}" >> $GITHUB_OUTPUT
#        env:
#          version: ${{needs.version.outputs.version }}
#          arch: ${{ matrix.config.arch }}
#          ostype: ${{ matrix.config.ostype }}
#          osname: ${{ matrix.config.osname }}
#    - 
#      name: Download artifact
#      uses: actions/download-artifact@v4
#      with:
#        name: ${{ steps.get_version.outputs.version }}
#    - name: Upload binaries to release
#      uses: svenstaro/upload-release-action@v2
#      with:
#        repo_token: ${{ secrets.GITHUB_TOKEN }}
#        file: ${{ steps.get_version.outputs.version }}/${{ steps.get_version.outputs.version }}.zip
#        asset_name: ${{ steps.get_version.outputs.version }}.zip
#        tag: ${{ steps.get_version.outputs.version }}
#        release_name: ${{needs.version.outputs.buildname }}
#        draft: true
#    - name: Upload MD5 to release
#      uses: svenstaro/upload-release-action@v2
#      with:
#        repo_token: ${{ secrets.GITHUB_TOKEN }}
#        file: target/release/${{ steps.get_version.outputs.version }}.img.md5
#        asset_name: ${{ steps.get_version.outputs.version }}.img.md5
#        tag: ${{ github.ref }}
#        release_name: ${{needs.version.outputs.buildname }}
#        draft: true
#    - name: Upload SHA1 to release
#      uses: svenstaro/upload-release-action@v2
#      with:
#        repo_token: ${{ secrets.GITHUB_TOKEN }}
#        file: target/release/${{ steps.get_version.outputs.version }}.img.sha1
#        asset_name: ${{ steps.get_version.outputs.version }}.img.sha1
#        tag: ${{ github.ref }}
#        release_name: ${{needs.version.outputs.buildname }}
#        draft: true
#    - name: Upload SHA256 to release
#      uses: svenstaro/upload-release-action@v2
#      with:
#        repo_token: ${{ secrets.GITHUB_TOKEN }}
#        file: target/release/${{ steps.get_version.outputs.version }}.img.sha256
#        asset_name: ${{ steps.get_version.outputs.version }}.img.sha256
#        tag: ${{ github.ref }}
#        release_name: ${{needs.version.outputs.buildname }}
#        draft: true